@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Signika:wght@300;400;600;700&display=swap");
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden], template {
  display: none;
}

html {
  background: #fff;
  color: #000;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}

html,
button,
input,
select,
textarea {
  font-family: sans-serif;
}

body {
  margin: 0;
}

a {
  background: transparent;
}
a:focus {
  outline: thin dotted;
}
a:hover, a:active {
  outline: 0;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

h2 {
  font-size: 1.5em;
  margin: 0.83em 0;
}

h3 {
  font-size: 1.17em;
  margin: 1em 0;
}

h4 {
  font-size: 1em;
  margin: 1.33em 0;
}

h5 {
  font-size: 0.83em;
  margin: 1.67em 0;
}

h6 {
  font-size: 0.75em;
  margin: 2.33em 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b,
strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

mark {
  background: #ff0;
  color: #000;
}

code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}

q {
  quotes: "“" "”" "‘" "’";
}

q:before, q:after {
  content: "";
  content: none;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

img {
  border: 0;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 0;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
  white-space: normal;
}

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  vertical-align: baseline;
}

button, input {
  line-height: normal;
}

button,
select {
  text-transform: none;
}

button,
html input[type=button],
input[type=reset],
input[type=submit] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled],
input[disabled] {
  cursor: default;
}

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
  vertical-align: top;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

input[type=search] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}
input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}
input[type=checkbox], input[type=radio] {
  box-sizing: border-box;
  padding: 0;
}

@font-face {
  src: url("./RAYDIS.woff") format("woff"), url("./RAYDIS.woff2") format("woff2");
  font-family: "RAYDIS";
  font-weight: 700;
}
.page {
  margin: 0 auto;
  background-color: #1B1821;
  max-width: 1920px;
  min-width: 320px;
  padding: 0 275px;
  font-family: "Signika", Arial, sans-serif;
  color: #FFFFFF;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
}
@media screen and (max-width: 1440px) {
  .page {
    padding: 0 80px;
  }
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.header__logo {
  width: 97px;
  height: 75px;
  object-fit: cover;
}
.header__menu-link {
  text-decoration: none;
  color: #FFFFFF;
  font-family: "Signika", Arial, sans-serif;
  font-size: 18px;
  font-weight: 400;
  line-height: 22.18px;
}
.header__items {
  display: flex;
  align-items: center;
  justify-content: space-between;
  list-style: none;
  gap: 77px;
  padding: 0;
  margin: 0;
}
.header__tel-block {
  display: grid;
  column-gap: 8px;
  grid-template-columns: auto auto;
  grid-template-rows: 24px 24px;
}
.header__tel-link {
  padding: 0;
  margin: 0;
  text-decoration: none;
  color: #FFFFFF;
  align-self: center;
}
.header__tel-icon {
  width: 30px;
  height: 30px;
  grid-row: span 2;
  align-self: center;
}
.header__btn {
  border: 1px solid #FFFFFF;
  border-radius: 4px;
  padding: 16px 24px;
  color: #FFFFFF;
  background: transparent;
  cursor: pointer;
  margin: 0;
  transition: 0.8s;
}
.header__btn:hover {
  border: 1px solid #22ADAA;
  color: #22ADAA;
}

.promo {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 77px 0 0;
}
.promo__title {
  font-family: "RAYDIS", Arial, sans-serif;
  width: 623px;
  color: #22ADAA;
  text-transform: uppercase;
  font-size: 60px;
  font-weight: 800;
  padding: 0;
  margin: 0;
  line-height: 60px;
  text-align: center;
  z-index: 1;
}
.promo__title_type_stroke {
  -webkit-text-stroke: 1px #22ADAA;
  color: transparent;
}
.promo__title_type_stroke-USA {
  font-size: 160px;
  line-height: 150px;
  -webkit-text-stroke: 1px #22ADAA;
  color: transparent;
  text-align: right;
  text-transform: uppercase;
}
.promo__text {
  font-family: "Signika", Arial, sans-serif;
  width: 366px;
  color: #FFFFFF;
  font-size: 22px;
  font-weight: 600;
  line-height: 30.8px;
  padding: 0;
  margin: 0;
}
.promo__text_type_strong {
  font-size: 49px;
  line-height: 68.6px;
}
.promo__list {
  padding: 0;
  margin: 24px 0 0;
  grid-row: 2;
}
.promo__item {
  font-family: "Signika", Arial, sans-serif;
  width: 366px;
  color: #FFFFFF;
  font-size: 16px;
  font-weight: 300;
  line-height: 19.71px;
  padding: 0;
  margin: 0;
}
.promo__btn {
  margin: 24px 0 0;
  padding: 16px 24px;
  background: #FFFFFF;
  border-radius: 4px;
  box-shadow: rgba(0, 0, 0, 0.09);
  outline: none;
  border: none;
  font-family: "Signika", Arial, sans-serif;
  color: #1B1821;
  font-size: 16px;
  font-weight: 400;
  line-height: 19.71px;
  grid-row: 3;
  width: 235px;
}
.promo__image {
  display: block;
  width: 769.42px;
  height: 315px;
  object-fit: cover;
  padding-left: 10px;
  padding-bottom: 25px;
  background-image: url("../../images/Ellipse 1.png");
  background-repeat: no-repeat;
  background-position: bottom 0 right 0;
  background-size: contain;
  grid-row: span 2;
}
.promo__content {
  display: grid;
  grid-template-columns: 400px 1fr;
  z-index: 2;
  top: 190px;
  left: 0;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
